<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="using:System"
                    xmlns:controls="clr-namespace:Avalonia.Themes.Neumorphism.Controls"
                    xmlns:assist="clr-namespace:Avalonia.Themes.Neumorphism.Assist"
                    xmlns:converters="clr-namespace:Avalonia.Themes.Neumorphism.Converters"
                    xmlns:naming="clr-namespace:Avalonia.Themes.Neumorphism.Resources.Naming">

  <!-- Neumorphism theme ok -->


  <Design.PreviewWith>
    <Border Margin="20, 20, 20, 200">
      <CalendarDatePicker Width="200" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
    </Border>
  </Design.PreviewWith>



  <ControlTheme x:Key="CustomCalendarDatePickerButton" TargetType="Button">
    <Setter Property="TextElement.Foreground" Value="Gray" />
    <Setter Property="Margin" Value="2,0,4,0" />
    <Setter Property="Width" Value="20" />
    <Setter Property="Template">
      <ControlTemplate>
        <Grid Height="24"
              Width="20"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Margin="0"
              ClipToBounds="False">
          <controls:MaterialInternalIcon Background="Transparent" Cursor="Hand"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Center"
                     Kind="Calendar" Width="24" Height="24"/>
        </Grid>
      </ControlTemplate>
    </Setter>
  </ControlTheme>



  <ControlTheme x:Key="{x:Type CalendarDatePicker}" TargetType="CalendarDatePicker">
    <Setter Property="Template">
      <ControlTemplate>
        <TextBlock Text="Please use ExtendedCalendarDatePicker instead of CalendarDatePicker"/>
      </ControlTemplate>
    </Setter>
  </ControlTheme>




  <ControlTheme x:Key="{x:Type controls:ExtendedCalendarDatePicker}" TargetType="controls:ExtendedCalendarDatePicker">
    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignForeground}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="UseFloatingWatermark" Value="False"/>
    <Setter Property="assist:DatePickerAssist.InnerRightBackground" Value="#22444444"/>
    <Setter Property="assist:DatePickerAssist.InnerRightPadding" Value="0"/>
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Height" Value="40"/>
    <Setter Property="Width" Value="240"/>
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0,15,0,15" />
    <Setter Property="CornerRadius" Value="10" />
    <Setter Property="Watermark" Value="" />
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="Template">
      <ControlTemplate>
        <!--<Grid RowDefinitions="*" Margin="0" VerticalAlignment="Top">-->

        <Border x:Name="PART_RootBorder"
                  CornerRadius="{TemplateBinding Height, Converter={StaticResource ControlHeightToCornerRadiusConverter}, ConverterParameter=0}"
                  Height="{TemplateBinding Height}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}">


          <Border.BoxShadow>
            <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.FixedInset}">
              <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
              <DynamicResource ResourceKey="MaterialDesignShadowLight" />
              <DynamicResource ResourceKey="MaterialDesignShadowDark" />
            </MultiBinding>
          </Border.BoxShadow>

          <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TextBlock Name="floatingWatermark" VerticalAlignment="Top" HorizontalAlignment="Left"
                      MaxWidth="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=60}"
                      IsVisible="{TemplateBinding UseFloatingWatermark}"
                      FontFamily="{TemplateBinding FontFamily}"
                      FontSize="{TemplateBinding FontSize}"
                      FontWeight="{TemplateBinding FontWeight}"
                      FontStyle="{TemplateBinding FontStyle}"
                      TextWrapping="NoWrap"
                      TextTrimming="CharacterEllipsis"
                      Text="{TemplateBinding (assist:DatePickerAssist.Label)}"
                      Foreground="{TemplateBinding Foreground}" Opacity="0.5"
                      RenderTransformOrigin="0, 0" />



            <Grid Name="PART_Grid" ColumnDefinitions="*,Auto" Margin="0" VerticalAlignment="Center">
              <!--Main container-->
              <Panel Grid.Column="0" Name="PART_TextRoot" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <DataValidationErrors Name="DataValidation" VerticalContentAlignment="Center" VerticalAlignment="Stretch" Margin="0">
                  <TextBox Name="PART_TextBox"
                 Theme="{StaticResource TextBoxNoMaterial2}"
                 Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=50}"
                 Foreground="{TemplateBinding Foreground}"
                 Background="Transparent"
                 BorderBrush="Transparent"
                 BorderThickness="0"
                 Padding="0"
                 Margin="0"
                 FontSize="{TemplateBinding FontSize}"
                 UseFloatingWatermark="False"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Stretch"
                 VerticalContentAlignment="Center"
                 HorizontalContentAlignment="Left"/>
                </DataValidationErrors>
              </Panel>

              <!--Right container-->
              <Border Grid.Column="1" Margin="0" Padding="0"
                  Height="{TemplateBinding Height}"
                  Background="{TemplateBinding assist:DatePickerAssist.InnerRightBackground}"
                  CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource CustomCornerRadiusConverter}, ConverterParameter=0%|100%|100%|0%}"
                  VerticalAlignment="Stretch">
                <Button Name="PART_Button" Width="40" Padding="{TemplateBinding assist:DatePickerAssist.InnerRightPadding}"
                Theme="{StaticResource CustomCalendarDatePickerButton}"
                Focusable="False" />
              </Border>
            </Grid>



            <Popup Name="PART_Popup"
                   PlacementTarget="{TemplateBinding}"
                   IsLightDismissEnabled="True">

              <Border Background="{TemplateBinding Background}" CornerRadius="10" Margin="10">
                <Border.BoxShadow>
                  <MultiBinding Converter="{StaticResource AutoBoxShadowsConverter}" ConverterParameter="{x:Static naming:BoxShadowsStyle.Default}">
                    <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                    <DynamicResource ResourceKey="MaterialDesignShadowLight" />
                    <DynamicResource ResourceKey="MaterialDesignShadowDark" />
                  </MultiBinding>
                </Border.BoxShadow>

                <Calendar Name="PART_Calendar"
                        FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                        IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                        SelectedDate="{TemplateBinding SelectedDate, Mode=TwoWay}"
                        DisplayDate="{TemplateBinding DisplayDate}"
                        DisplayDateStart="{TemplateBinding DisplayDateStart}"
                        DisplayDateEnd="{TemplateBinding DisplayDateEnd}" />
              </Border>
            </Popup>

          </Grid>
        </Border>
        <!--</Grid>-->
      </ControlTemplate>
    </Setter>

    <!-- Focused State (custom FocusAdorner) -->
    <Style Selector="^:focus-within /template/ Border#PART_RootBorder">
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignFocus}" />
    </Style>

    <!-- Pressed State -->
    <Style Selector="^:pressed /template/ Border#PART_RootBorder">
      <Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackgroundPressed}" />
      <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrushPressed}" />
    </Style>

    <!-- Disabled State -->
    <Style Selector="^:disabled">
      <Style Selector="^ /template/ Border#PART_RootBorder">
        <Setter Property="Opacity" Value="0.5" />
      </Style>

      <Style Selector="^ /template/ Button#PART_Button">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource CalendarDatePickerCalendarGlyphForegroundDisabled}" />
      </Style>
    </Style>

    <!-- Focused State -->
    <Style Selector="^:focus-within:not(CalendarDatePicker:focus) /template/ Border#PART_RootBorder">
      <Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}" />
      <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}" />
      <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
    </Style>

    <!-- Error State -->
    <Style Selector="^:error /template/ Border#PART_RootBorder">
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}" />
    </Style>

    <Style Selector="^:error /template/ TextBox#PART_TextBox">
      <Setter Property="Margin" Value="0,8,0,0" />
    </Style>

    <!-- Transitions for all styles textfield -->
    <Style Selector="^:error:not(.notransitions) /template/ TextBox#PART_TextBox">
      <Setter Property="Transitions">
        <Transitions>
          <ThicknessTransition Duration="0:0:0.25" Property="Margin" Easing="CubicEaseOut" />
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="CubicEaseOut" />
        </Transitions>
      </Setter>
    </Style>

    <!--Floating watermark anim-->
    <Style Selector="^:not(^[Text=]):focus-within /template/ TextBlock#floatingWatermark">
      <Setter Property="Margin" Value="1,-16,1,1" />
      <Setter Property="RenderTransform" Value="scale(0.75)" />
      <Setter Property="MaxWidth" Value="{TemplateBinding Width}" />
    </Style>

    <Style Selector="^:not(^[Text=]) /template/ TextBlock#floatingWatermark">
      <Setter Property="Margin" Value="1,-16,1,1" />
      <Setter Property="RenderTransform" Value="scale(0.75)" />
      <Setter Property="MaxWidth" Value="{TemplateBinding Width}" />
    </Style>


    <Style Selector="^[Text=]:not(:focus) /template/ TextBlock#floatingWatermark">
      <Setter Property="Margin" Value="10,10,10,0" />
      <Setter Property="RenderTransform" Value="scale(1)" />
    </Style>

    <Style Selector="^:focus-within /template/ TextBlock#floatingWatermark">
      <Setter Property="Margin" Value="1,-16,1,1" />
      <Setter Property="RenderTransform" Value="scale(0.75)" />
      <Setter Property="MaxWidth" Value="{TemplateBinding Width}" />
    </Style>

    <Style Selector="^ /template/ TextBlock#floatingWatermark">
      <Setter Property="Foreground" Value="{DynamicResource ThemeAccentBrush}" />
    </Style>



    <Style Selector="^[UseFloatingWatermark=False] /template/ TextBox#PART_TextBox">
      <Setter Property="Watermark" Value="{TemplateBinding Watermark}" />
    </Style>

    <!-- Transitions for all styles textfield -->
    <Style Selector="^:not(.notransitions) /template/ TextBlock#floatingWatermark, ^:not(.notransitions) /template/ Border#watermarkRoot">
      <Setter Property="Transitions">
        <Transitions>
          <ThicknessTransition Duration="0:0:0.25" Property="Margin" Easing="CubicEaseOut" />
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="CubicEaseOut" />
        </Transitions>
      </Setter>
    </Style>

    <Style Selector="^:error /template/ TextBlock#floatingWatermark">
      <Setter Property="Foreground" Value="{DynamicResource ValidationErrorBrush}" />
    </Style>
  </ControlTheme>
</ResourceDictionary>